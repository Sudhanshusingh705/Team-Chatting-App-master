{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport { getSecondsInUnit } from './units.js';\nimport { getDiffRatioToNextRoundedNumber } from '../round.js';\nexport default function getStepMinTime(step, _ref) {\n  var prevStep = _ref.prevStep,\n      timestamp = _ref.timestamp,\n      now = _ref.now,\n      future = _ref.future,\n      round = _ref.round;\n  var minTime; // \"threshold_for_xxx\" is a legacy property.\n\n  if (prevStep) {\n    if (prevStep.id || prevStep.unit) {\n      minTime = step[\"threshold_for_\".concat(prevStep.id || prevStep.unit)];\n    }\n  }\n\n  if (minTime === undefined) {\n    // \"threshold\" is a legacy property.\n    if (step.threshold !== undefined) {\n      // \"threshold\" is a legacy name for \"minTime\".\n      minTime = step.threshold; // \"threshold\" function is deprecated.\n\n      if (typeof minTime === 'function') {\n        minTime = minTime(now, future);\n      }\n    }\n  }\n\n  if (minTime === undefined) {\n    minTime = step.minTime;\n  } // A deprecated way of specifying a different threshold\n  // depending on the previous step's unit.\n\n\n  if (_typeof(minTime) === 'object') {\n    if (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\n      minTime = minTime[prevStep.id];\n    } else {\n      minTime = minTime[\"default\"];\n    }\n  }\n\n  if (typeof minTime === 'function') {\n    minTime = minTime(timestamp, {\n      future: future,\n      getMinTimeForUnit: function getMinTimeForUnit(toUnit, fromUnit) {\n        return _getMinTimeForUnit(toUnit, fromUnit || prevStep && prevStep.formatAs, {\n          round: round\n        });\n      }\n    });\n  } // Evaluate the `test()` function.\n  // `test()` function is deprecated.\n\n\n  if (minTime === undefined) {\n    if (step.test) {\n      if (step.test(timestamp, {\n        now: now,\n        future: future\n      })) {\n        // `0` threshold always passes.\n        minTime = 0;\n      } else {\n        // `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\n        minTime = 9007199254740991; // Number.MAX_SAFE_INTEGER\n      }\n    }\n  }\n\n  if (minTime === undefined) {\n    if (prevStep) {\n      if (step.formatAs && prevStep.formatAs) {\n        minTime = _getMinTimeForUnit(step.formatAs, prevStep.formatAs, {\n          round: round\n        });\n      }\n    } else {\n      // The first step's `minTime` is `0` by default.\n      minTime = 0;\n    }\n  } // Warn if no `minTime` was defined or could be deduced.\n\n\n  if (minTime === undefined) {\n    console.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2));\n  }\n\n  return minTime;\n}\n\nfunction _getMinTimeForUnit(toUnit, fromUnit, _ref2) {\n  var round = _ref2.round;\n  var toUnitAmount = getSecondsInUnit(toUnit); // if (!fromUnit) {\n  // \treturn toUnitAmount;\n  // }\n  // if (!fromUnit) {\n  // \tfromUnit = getPreviousUnitFor(toUnit)\n  // }\n\n  var fromUnitAmount;\n\n  if (fromUnit === 'now') {\n    fromUnitAmount = getSecondsInUnit(toUnit);\n  } else {\n    fromUnitAmount = getSecondsInUnit(fromUnit);\n  }\n\n  if (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\n    return toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round));\n  }\n}","map":{"version":3,"mappings":"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","names":["getSecondsInUnit","getDiffRatioToNextRoundedNumber","getStepMinTime","step","prevStep","timestamp","now","future","round","minTime","id","unit","undefined","threshold","_typeof","getMinTimeForUnit","toUnit","fromUnit","formatAs","test","console","warn","JSON","stringify","toUnitAmount","fromUnitAmount"],"sources":["C:\\Users\\hp\\Downloads\\Team-Chatting-App-master\\frontend\\node_modules\\javascript-time-ago\\source\\steps\\getStepMinTime.js"],"sourcesContent":["import { getSecondsInUnit } from './units.js'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round.js'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}