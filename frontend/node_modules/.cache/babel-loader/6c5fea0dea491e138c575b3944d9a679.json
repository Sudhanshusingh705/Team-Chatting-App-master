{"ast":null,"code":"// For all locales added\n// their relative time formatter messages will be stored here.\nvar localesData = {};\nexport function getLocaleData(locale) {\n  return localesData[locale];\n}\nexport function addLocaleData(localeData) {\n  if (!localeData) {\n    throw new Error('[javascript-time-ago] No locale data passed.');\n  } // This locale data is stored in a global variable\n  // and later used when calling `.format(time)`.\n\n\n  localesData[localeData.locale] = localeData;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,IAAMA,WAAW,GAAG,EAApB;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;EACrC,OAAOF,WAAW,CAACE,MAAD,CAAlB;AACA;AAED,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;EACzC,IAAI,CAACA,UAAL,EAAiB;IAChB,MAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;EAFwC,EAIzC;EACA;;;EACAL,WAAW,CAACI,UAAU,CAACF,MAAZ,CAAXF,GAAiCI,UAAjCJ;AACA","names":["localesData","getLocaleData","locale","addLocaleData","localeData","Error"],"sources":["C:\\Users\\hp\\Downloads\\Team-Chatting-App-master\\frontend\\node_modules\\javascript-time-ago\\source\\LocaleDataStore.js"],"sourcesContent":["// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\nexport function addLocaleData(localeData) {\r\n\tif (!localeData) {\r\n\t\tthrow new Error('[javascript-time-ago] No locale data passed.')\r\n\t}\r\n\t// This locale data is stored in a global variable\r\n\t// and later used when calling `.format(time)`.\r\n\tlocalesData[localeData.locale] = localeData\r\n}"]},"metadata":{},"sourceType":"module"}